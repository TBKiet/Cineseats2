<section>
    <div class="d-flex">
        {{> sidebar}}

        <div class="content">
            <h1>Dashboard</h1>

            <div class="cards">
                <!-- Total Movies -->
                <div class="card-dashboard">
                    <div class="icon" style="background-color: #ff9800;">
                        <i class="fa fa-ticket-alt"></i>
                    </div>
                    <div class="content-card">
                        <h3>Total Movies</h3>
                        <p id="value-total-movies">0</p>
                    </div>
                </div>

                <!-- Total Users -->
                <div class="card-dashboard">
                    <div class="icon" style="background-color: #4caf50;">
                        <i class="fa fa-user"></i>
                    </div>
                    <div class="content-card">
                        <h3>Total Users</h3>
                        <p id="value-total-users">0</p>
                    </div>
                </div>

                <!-- Total Tickets -->
                <div class="card-dashboard">
                    <div class="icon" style="background-color: #ff9800;">
                        <i class="fa fa-ticket-alt"></i>
                    </div>
                    <div class="content-card">
                        <h3>Total Tickets</h3>
                        <p id="value-total-tickets">0</p>
                    </div>
                </div>

                <!-- Total Revenue -->
                <div class="card-dashboard">
                    <div class="icon" style="background-color: #f44336;">
                        <i class="fa fa-dollar-sign"></i>
                    </div>
                    <div class="content-card">
                        <h3>Total Revenue</h3>
                        <p id="value-total-revenue">0</p>
                    </div>
                </div>
            </div>

            <div class="d-flex gap-4">
                <div class="chart-container">
                    <h2>Overview</h2>
                    <div class="charts d-flex">
                        <div class="chart">
                            <canvas id="pieChart"></canvas>
                        </div>
                        <div class="chart">
                            <canvas id="barChart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="report-container">
                    <h2>Revenue Report</h2>
                    <div class="filters d-flex">
                        <label for="time-range">Select Time Range:</label>
                        <select id="time-range">
                            <option value="day">Day</option>
                            <option value="week">Week</option>
                            <option value="month">Month</option>
                            <option value="year">Year</option>
                        </select>
                        <button id="generate-report">Generate Report</button>
                    </div>
                    <div class="chart">
                        <canvas id="revenueReportChart"></canvas>
                    </div>
                </div>
                <div class="top-revenue-container">
                    <h2>Top Revenue by Product</h2>
                    <div class="filters d-flex">
                        <label for="product-time-range">Select Time Range:</label>
                        <select id="product-time-range">
                            <option value="day">Day</option>
                            <option value="week">Week</option>
                            <option value="month">Month</option>
                            <option value="year">Year</option>
                        </select>
                        <button id="generate-product-report">Generate Report</button>
                    </div>
                    <div class="chart">
                        <canvas id="topRevenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Include required JS libraries -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let totalUsers = 0;
        let totalMovies = 0;
        let totalTickets = 0;
        let totalRevenue = 0;

        // Function to fetch and update total users
        async function fetchTotalUsers() {
            try {
                const response = await fetch('/admin/dashboard/total-users'); // API endpoint for total users
                if (response.ok) {
                    const data = await response.json();
                    console.log('Total Users Data:', data);  // Debug: check the fetched data
                    const totalUsersElement = document.getElementById('value-total-users');
                    if (totalUsersElement) {
                        //console.log('Updating total users value');
                        totalUsersElement.textContent = data.totalUsers; // Update the element with the total users
                        totalUsers = data.totalUsers;
                        updateOverviewChart();
                    } else {
                        console.error('Element with id "value-total-users" not found');
                    }
                } else {
                    console.error('Failed to fetch total users');
                }
            } catch (error) {
                console.error('Error fetching total users:', error);
            }
        }

        // Function to fetch and update total movies
        async function fetchTotalMovies() {
            try {
                const response = await fetch('/admin/dashboard/total-movies'); // API endpoint for total movies
                if (response.ok) {
                    const data = await response.json();
                    console.log('Total Movies Data:', data);  // Debug: check the fetched data
                    const totalMoviesElement = document.getElementById('value-total-movies');
                    if (totalMoviesElement) {
                        //console.log('Updating total movies value');
                        totalMoviesElement.textContent = data.totalMovies; // Update the element with the total movies
                        totalMovies = data.totalMovies;
                        updateOverviewChart();
                    } else {
                        console.error('Element with id "value-total-movies" not found');
                    }
                } else {
                    console.error('Failed to fetch total movies');
                }
            } catch (error) {
                console.error('Error fetching total movies:', error);
            }
        }

        // Update Overview Chart with fetched data
        function updateOverviewChart() {
            // Only update the chart if both values are fetched
            if (totalUsers !== 0 && totalMovies !== 0) {
                pieChart.data.datasets[0].data = [totalMovies, totalUsers, 0, 0]; // Adjust 120 for the revenue data if needed
                pieChart.update();
            }
        }

        document.addEventListener('DOMContentLoaded', fetchTotalUsers);
        document.addEventListener('DOMContentLoaded', fetchTotalMovies);

        // Initialize charts
        const ctxPie = document.getElementById('pieChart').getContext('2d');
        const ctxBar = document.getElementById('barChart').getContext('2d');
        const ctxRevenueReport = document.getElementById('revenueReportChart').getContext('2d');
        const ctxTopRevenue = document.getElementById('topRevenueChart').getContext('2d');
        const pieChart = new Chart(ctxPie, {
            type: 'pie',
            data: {
                labels: ['Movies', 'Users', 'Tickets Sold', 'Revenue Earned'],
                datasets: [{
                    data: [0, 0, 0, 0],
                    backgroundColor: ['#ff9800', '#4caf50', '#f44336'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    }
                }
            }
        });
        const barChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'Revenue',
                    data: [50, 100, 75, 150, 200, 175],
                    backgroundColor: '#03a9f4',
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        const revenueReportChart = new Chart(ctxRevenueReport, {
            type: 'line',
            data: {
                labels: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5'],
                datasets: [{
                    label: 'Revenue',
                    data: [100, 200, 150, 300, 250],
                    borderColor: '#4caf50',
                    fill: false,
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        const topRevenueChart = new Chart(ctxTopRevenue, {
            type: 'bar',
            data: {
                labels: ['Product A', 'Product B', 'Product C', 'Product D'],
                datasets: [{
                    label: 'Revenue',
                    data: [400, 300, 250, 150],
                    backgroundColor: ['#ff9800', '#4caf50', '#f44336', '#03a9f4'],
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        // Event listeners for report generation
        document.getElementById('generate-report').addEventListener('click', () => {
            // Logic to update revenue report based on selected time range
            alert('Revenue report generated for: ' + document.getElementById('time-range').value);
        });
        document.getElementById('generate-product-report').addEventListener('click', () => {
            // Logic to update top revenue report based on selected time range
            alert('Top revenue by product generated for: ' + document.getElementById('product-time-range').value);
        });
    </script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
        }

        .d-flex {
            display: flex;
        }

        .content {
            padding: 20px;
            width: 100%;
        }

        .welcome {
            color: #555;
        }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }

        .card-dashboard {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            padding: 20px;
            width: auto;
        }

        .icon {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            border-radius: 50%;
            margin-right: 15px;
        }

        .content-card h3 {
            margin: 0 0 5px;
            font-size: 18px;
            color: #333;
        }

        .content-card p {
            margin: 0;
            font-size: 20px;
            color: #888;
        }

        .chart-container,
        .report-container,
        .top-revenue-container {
            margin-top: 40px;
        }

        .filters {
            margin-bottom: 20px;
        }

        .filters label {
            margin-right: 10px;
            font-size: 16px;
        }

        .filters select,
        .filters button {
            padding: 8px 12px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .filters button {
            background-color: #4caf50;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .filters button:hover {
            background-color: #45a049;
        }

        .charts {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .chart {
            background: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            flex: 1;
        }
    </style>
</section>