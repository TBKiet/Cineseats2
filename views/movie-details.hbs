<section>
    <div class="container-fluid px-0">
        <!-- Movie Trailer -->
        <div class="rh5-media-wrapper-16:9">
            <iframe src="https://www.youtube.com/embed/{{trailer}}" frameborder="0" webkitallowfullscreen
                mozallowfullscreen allowfullscreen></iframe>
        </div>
        {{#if background_image_url}}
        <div class="mv-detail" style="background: url({{background_image_url}}); background-size: cover;">
            {{else}}
            <div class="mv-detail" style="background-size: cover;">
                {{/if}}
                <div class="popular-movie-slider">
                    <img src="{{image}}" alt="{{name_vn}}" class="poster">

                    <div class="popular-movie-slider-content">
                        <p class="release">Ngày khởi chiếu: {{release_date}}</p>
                        <h2 class="movie-name">{{name_vn}}</h2>
                        <ul class="category">
                            <li>
                                <p>Thể loại: {{type_name_vn}}</p>
                            </li>
                            <li>
                                <p>Nhà sản xuất: {{production}}</p>
                            </li>
                            <li>
                                <p>Đạo diễn: {{director}}</p>
                            </li>
                            <li>
                                <p>Diễn viên: {{actor}}</p>
                            </li>
                        </ul>

                        <p class="desc">{{brief_vn}}</p>

                        <div class="movie-info">
                            <p><i class="fa-solid fa-clock"></i> {{time}} phút</p>
                            {{#if country_name_vn}}
                            <p><i class="fa-solid fa-globe"></i> {{country_name_vn}}</p>
                            {{else}}
                            <p><i class="fa-solid fa-globe"></i> Đang cập nhật</p>
                            {{/if}}
                            {{#if ratings}}
                            <p><i class="fa-solid fa-star" style="color: #FFD43B;"></i> {{ratings}}</p>
                            {{else}}
                            <p><i class="fa-solid fa-star" style="color: #FFD43B;"></i> 0.0</p>
                            {{/if}}
                        </div>
                    </div>

                </div>
            </div>
            <div class="showtime-container">
                <h1>Lịch Chiếu</h1>

                <div class="top-section">
                    <div class="date-selector">
                        {{#each uniqueDates}}
                        <button class="date-btn {{#if @first}}active{{/if}}">
                            <div class="day">{{this.date}}</div>
                            <div class="weekday">{{this.dayOfWeek}}</div>
                        </button>
                        {{/each}}
                    </div>

                    <div class="filter-section">
                        <select class="filter-dropdown form-control">
                            <option class="filter-btn" value="none" selected>Tất cả rạp</option>
                            {{#each uniqueCity}}
                            <option class="filter-btn" value="{{this.city}}">{{this.city}}</option>
                            {{/each}}
                        </select>
                    </div>
                </div>

                <div class="theater-section">
                    {{#each theaters}}
                    <div class="theater">
                        <div class="theater-header">
                            <div class="theater-logo"></div>
                            <div class="theater-info">
                                <h2>{{this.theaterName}}</h2>
                                <p>{{this.address}}</p>
                            </div>
                        </div>
                        <div class="showtimes">
                            {{#each showtimes}}
                            <div class="showtime" data-showtime-id="{{this.showtimeId}}"
                                data-showtime-date="{{this.date}}" data-showtime-time="{{this.startTime}}"
                                data-room-name="{{theaterRoom/roomName}}" data-theater-name="{{../theaterName}}"
                                data-address="{{../address}}">
                                <span class="time">{{this.startTime}}</span>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </div>
        <!---slider--->
        <div class="container mb-3">
            <h1 class="showing-line">Related Movies</h1>
            <div class="slider-container relative-slider">
                <button class="slider-btn prev" onclick="moveSlide('relative', -4)">❮</button>
                <div class="slider">
                    {{#each relatedMovies}}
                    <div class="movie-slide col-6 col-sm-6 col-xl-3" id="mv-img">
                        <div class="brief-des">
                            <a href="/movies/{{this.id}}">
                                <img src="{{this.image}}" alt="{{this.name_vn}}" class="img-fluid">
                            </a>
                            <div class="rating">
                                {{#if this.ratings}}
                                <i class="fa-solid fa-star"></i>
                                <p>{{this.ratings}}</p>
                                {{/if}}
                            </div>
                            <div class="age-limit">{{this.limitage_vn}}</div>
                        </div>
                        <p class="mv-name">{{this.name_vn}}</p>
                    </div>
                    {{/each}}
                </div>
                <button class="slider-btn next" onclick="moveSlide('relative', 4)">❯</button>
            </div>
        </div>
    </div>
</section>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Delegate the click event to .theater-section
        const showtimeContainer = document.querySelector('.theater-section');

        showtimeContainer.addEventListener('click', (event) => {
            // Check if the clicked element is a .showtime
            const showtime = event.target.closest('.showtime');
            if (!showtime) return;

            const movieId = "{{id}}";
            const image = '{{image}}';
            const nameVn = '{{name_vn}}';
            const showtimeId = showtime.getAttribute('data-showtime-id');
            const showtimeDate = showtime.getAttribute('data-showtime-date');
            const dateObj = new Date(showtimeDate);
            // Format date to "DEC 29TH"
            const month = dateObj.toLocaleString('en-US', { month: 'short' }).toUpperCase();
            const day = dateObj.getDate();
            let suffix = 'TH';
            if (day === 1 || day === 21 || day === 31) suffix = 'ST';
            else if (day === 2 || day === 22) suffix = 'ND';
            else if (day === 3 || day === 23) suffix = 'RD';
            const formattedDate = `${month} ${day}${suffix}`;
            const year = dateObj.getFullYear();

            const showtimeTime = showtime.getAttribute('data-showtime-time');
            const roomName = showtime.getAttribute('data-room-name');
            const theaterName = showtime.getAttribute('data-theater-name');
            // Get the address and extract the city
            const address = showtime.getAttribute('data-address');
            const addressParts = address.split(',');
            const city = addressParts[addressParts.length - 1].trim();
            // Get the day of the week
            const date = new Date(showtimeDate);
            const daysOfWeek = ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'];
            const dayOfWeek = daysOfWeek[date.getDay()];

            if (showtimeId && movieId) {
                // Create a form dynamically
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/booking/${movieId}`; // Sending to /booking/:movieId

                // Create hidden inputs for all required data
                const inputs = [
                    { name: 'showtimeId', value: showtimeId },
                    { name: 'showtimeDate', value: showtimeDate },
                    { name: 'formattedDate', value: formattedDate },
                    { name: 'year', value: year },
                    { name: 'dayOfWeek', value: dayOfWeek },
                    { name: 'showtimeTime', value: showtimeTime },
                    { name: 'image', value: image },
                    { name: 'name_vn', value: nameVn },
                    { name: 'roomName', value: roomName },
                    { name: 'theaterName', value: theaterName },
                    { name: 'city', value: city }
                ];

                inputs.forEach(({ name, value }) => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = name;
                    input.value = value;
                    form.appendChild(input);
                });

                // Append the form to the body and submit it
                document.body.appendChild(form);
                form.submit();
            } else {
                console.error('Showtime ID or Movie ID not found.');
            }
        });
    });
    document.querySelectorAll(".date-btn").forEach((button) => {
        button.addEventListener("click", () => {
            document.querySelectorAll(".date-btn").forEach((btn) => {
                btn.classList.remove("active");
            });
            button.classList.add("active");
            const date = button.querySelector(".day").textContent;
            const city = document.querySelector(".filter-dropdown").value;
            fetchShowtime("{{id}}", date, city);
        });
    });
    document.querySelector(".filter-dropdown").addEventListener("change", () => {
        const date = document.querySelector(".date-btn.active .day").textContent;
        const city = document.querySelector(".filter-dropdown").value;
        fetchShowtime("{{id}}", date, city);
    });
    function fetchShowtime(movieId, date, city) {
        let queryParams = new URLSearchParams();
        queryParams.append("movieId", movieId);
        if (date !== 'none') queryParams.append("date", date);
        if (city !== 'none') queryParams.append("City", city);
        fetch(`/api/showtime?${queryParams.toString()}`)
            .then(response => response.json())
            .then(data => renderShowtime(data.data))
            .catch(error => console.error("Error:", error));
    }
    function renderShowtime(data) {
        const showtimeContainer = document.querySelector(".theater-section");

        // Clear the existing content
        showtimeContainer.innerHTML = "";

        // Iterate through theaters and create the structure dynamically
        data.theaters.forEach(theater => {
            const theaterDiv = document.createElement("div");
            theaterDiv.classList.add("theater");

            // Create the theater header
            const header = document.createElement("div");
            header.classList.add("theater-header");
            header.innerHTML = `
            <div class="theater-logo"></div>
            <div class="theater-info">
                <h2>${theater.theaterName}</h2>
                <p>${theater.address}</p>
            </div>
        `;
            theaterDiv.appendChild(header);

            // Create the showtimes container
            const showtimesDiv = document.createElement("div");
            showtimesDiv.classList.add("showtimes");

            theater.showtimes.forEach(showtime => {
                // Create individual showtime div
                const showtimeDiv = document.createElement("div");
                showtimeDiv.classList.add("showtime");

                // Add necessary data attributes
                showtimeDiv.setAttribute("data-showtime-theater", theater.theaterName);
                showtimeDiv.setAttribute("data-showtime-id", showtime.showtimeId);
                showtimeDiv.setAttribute("data-showtime-date", showtime.date);
                showtimeDiv.setAttribute("data-showtime-time", showtime.startTime);
                showtimeDiv.setAttribute("data-room-name", showtime.theaterRoom.roomName);
                showtimeDiv.setAttribute("data-theater-name", theater.theaterName);
                showtimeDiv.setAttribute("data-address", theater.address);

                // Add inner content
                showtimeDiv.innerHTML = `<span class="time">${showtime.startTime}</span>`;

                // Append showtime to the showtimes container
                showtimesDiv.appendChild(showtimeDiv);
            });

            // Append showtimes to the theater
            theaterDiv.appendChild(showtimesDiv);

            // Append theater to the main container
            showtimeContainer.appendChild(theaterDiv);
        });
    }

</script>